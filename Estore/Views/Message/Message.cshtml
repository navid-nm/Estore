@model Estore.Models.Message;

@{
    ViewData["Title"] = "Not found";
    ViewData["ShowSearchInNavbar"] = true;

    Message message = null;
    User seller = null;
    string img = null;
    if (ViewBag.ThisMessage != null)
    {
        message = (Message)ViewBag.ThisMessage;
        seller = (User)ViewBag.Seller;
        img = ViewFunc.GetImageUrls(message.SubjectItem)[0];
        ViewData["Title"] = message.Sender.Username + "'s message on" + message.SubjectItem.Name;
    }
}

<link rel="stylesheet" href="~/lib/quill/quill.min.css" />

<div class="nonbscontainer pt-5">
    @if (message == null)
    {
        <center>
            <div class="dz-error animate__animated animate__fadeInUp pt-5">
                <h2>Not found</h2>
                <h5 class="text-muted">No such message exists.</h5>
                <div class="p-4">
                    <a href="/my/messages">Go to my messages</a>
                </div>
            </div>
        </center>
    }
    else
    {
        <form method="post" id="message-form" asp-controller="Message">
            <div id="item-preview border">
                <h4>Message regarding this item:</h4>
                <div class="row pt-4">
                    <div class="pl-3 col-2">
                        <img src="@img" class="search-result-image" />
                    </div>
                    <div class="col-9">
                        <h5>@message.SubjectItem.Name</h5>
                        <span class="text-secondary">
                            @message.SubjectItem.GetConditionDisplayName()
                        </span>
                        <div class="pt-3">
                            Seller:
                            <a href="/user/@seller.Username">
                                @ViewFunc.NormaliseName(seller.Username, 25)
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div id="received-container" class="pt-3">
                <div id="recieved-message-body" class="container-flex pt-2 pl-2 border m-element" 
                                                style="overflow:auto;">
                    <b>From: </b>
                    <a href="/user/@message.Sender.Username">
                        @ViewFunc.NormaliseName(message.Sender.Username, 25)
                    </a><br />
                    <b>To: </b>
                    <a href="/user/@message.Recipient.Username">
                        @ViewFunc.NormaliseName(message.Recipient.Username, 25)
                        @if (message.Recipient.Username == User.Identity.Name)
                        {
                            @Html.Raw(" (you)")
                        }
                    </a><br />
                    <b>Date: </b>@message.Date.ToShortDateString() @message.Date.ToShortTimeString()
                    <hr />
                    @Html.Raw(message.MessageBody)
                </div>
            </div>
            <div id="message-composition" class="container-flex pt-2 m-element">
                <br /><div id="message-editor"></div>
            </div>
            <br />
            <textarea style="display:none;" id="hidden" asp-for="MessageBody"></textarea>
            <br /><br />
            <div class="pt-2 text-right border-bottom">
                <input type="submit" class="btn btn-outline-primary" id="send-button" value="Reply" />
                <div class="pb-3"></div>
            </div>
            <span asp-validation-for="MessageBody"></span>
            <span id="cur-recipient-name" style="display:none;">@message.Sender.Username</span>
        </form>
    }
</div>

<script src="~/lib/quill/quill.min.js"></script>
<script>
    var quill = new Quill("#message-editor", { theme: "snow" })
</script>
